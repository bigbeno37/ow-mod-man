name: Nightly Build

on:
  workflow_dispatch:
  push:
    branches: [dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Nightly Version
    strategy:
      fail-fast: false
      matrix:
        include:
            - platform: 'macos-latest' # for Arm based macs (M1 and above).
              args: 'app dmg -- --target aarch64-apple-darwin'
              bundle-name: MacOS-aarch64
              bundle-path: |
                target/release/bundle/**/*.dmg
                target/release/bundle/**/*.app
            - platform: 'macos-latest' # for Intel based macs.
              args: 'app dmg -- --target x86_64-apple-darwin'
              bundle-name: MacOS-x86_64
              bundle-path: |
                target/release/bundle/**/*.dmg
                target/release/bundle/**/*.app
            - platform: 'ubuntu-22.04'
              args: 'appimage deb'
              bundle-name: Linux
              bundle-path: |
                target/release/bundle/**/*.deb
                target/release/bundle/**/*.AppImage
            - platform: 'windows-latest'
              args: 'msi nsis'
              bundle-name: Windows
              bundle-path: |
                target/release/bundle/**/*.msi
                target/release/bundle/**/*.exe
                target/release/*.exe
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: v1-${{ matrix.platform }}-rust-cache-${{ hashFiles('Cargo.lock') }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: owmods_gui/frontend/package.json

      - name: Install Frontend Dependencies
        working-directory: owmods_gui/frontend
        run: npm install

      - name: Install Tauri CLI
        run: npm add -g @tauri-apps/cli

      - name: Disable Tauri Updater
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          cargo xtask gui_disable_updater

      - name: Build GUI
        run: tauri build --ci -b ${{ matrix.args }}
        shell: bash
        env:
          VITE_COMMIT: ${{ github.sha }}
          VITE_VERSION_SUFFIX: -nightly

      - name: Upload GUI
        uses: actions/upload-artifact@v4
        with:
          name: GUI-Nightly-${{ matrix.bundle-name }}
          path: ${{ matrix.bundle-path }}
